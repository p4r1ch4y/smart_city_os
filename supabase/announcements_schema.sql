-- Supabase schema for Announcements (City Notices)
-- Run this in the Supabase SQL editor (or via CLI) on your project

create schema if not exists public;

create table if not exists public.announcements (
  id bigint generated by default as identity primary key,
  title text not null,
  content text not null,
  image_url text,
  video_url text,
  link_url text,
  author text not null,
  created_at timestamptz not null default now()
);

-- Row Level Security
alter table public.announcements enable row level security;

-- Policies
-- 1) Anyone authenticated can read announcements
drop policy if exists "Announcements are viewable by authenticated users" on public.announcements;
create policy "Announcements are viewable by authenticated users"
  on public.announcements for select
  to authenticated
  using (true);

-- 2) Allow authenticated users to create announcements
-- You can restrict this further if you maintain an admins list or custom JWT claim
drop policy if exists "Authenticated users can create announcements" on public.announcements;
create policy "Authenticated users can create announcements"
  on public.announcements for insert
  to authenticated
  with check (true);

-- 3) Allow authors to update their own announcements (optional)
drop policy if exists "Authors can update their own announcements" on public.announcements;
create policy "Authors can update their own announcements"
  on public.announcements for update
  to authenticated
  using (author = (auth.jwt() ->> 'email'))
  with check (author = (auth.jwt() ->> 'email'));

-- 4) Allow authors to delete their own announcements (optional)
drop policy if exists "Authors can delete their own announcements" on public.announcements;
create policy "Authors can delete their own announcements"
  on public.announcements for delete
  to authenticated
  using (author = (auth.jwt() ->> 'email'));

-- Indexes
create index if not exists announcements_created_at_idx on public.announcements (created_at desc);

